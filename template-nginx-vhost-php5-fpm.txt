server {
        listen 80;
        listen 443;
	server_name www.%DOMAIN%;
	return 301 https://%DOMAIN%$request_uri;
}

## Use ssl as default (uncomment if required)
#server {
#        listen 80;
#        server_name %DOMAIN%;
#        return 301 https://%DOMAIN%$request_uri;
#}

server {

	server_name %DOMAIN%;
	root %WWW_ROOT%/%DOMAIN%/%PUBLIC_DIR%;

	index index.php index.html;

	## Use ssl as default (uncomment if required)
	#listen 443 default ssl;
	#ssl_certificate /etc/letsencrypt/live/%DOMAIN%/fullchain.pem;
	#ssl_certificate_key /etc/letsencrypt/live/%DOMAIN%/privkey.pem;
	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #ssl_prefer_server_ciphers on;
        #ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

	# serve static files directly
	location ~* \.(css|gif|ico|html|jpg|jpeg|js|png|svg|txt)$ {
		access_log off;
		expires max;
	}

	location = /favicon.ico { access_log off; log_not_found off; }
    	location = /robots.txt  { access_log off; log_not_found off; }

	# removes trailing slashes (prevents SEO duplicate content issues)
	if (!-d $request_filename)
	{
		rewrite ^/(.+)/$ /$1 permanent;
	}

	# unless the request is for a valid file (image, js, css, etc.), send to bootstrap
	if (!-e $request_filename)
	{
		rewrite ^/(.*)$ /index.php?/$1 last;
		break;
	}

	# catch all
	error_page 404 /index.php;

	location ~ \.php$ {
		   try_files $uri = 404;
		   
		   fastcgi_split_path_info ^(.+\.php)(/.+)$;
		   # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
			
		   # With php5-cgi alone:
		   # fastcgi_pass 127.0.0.1:9000;

		   # With php5-fpm:
		   fastcgi_pass unix:/var/run/php5-fpm.sock;
		   fastcgi_index index.php;
		   include fastcgi_params;
		   fastcgi_param SCRIPT_FILENAME %WWW_ROOT%/%DOMAIN%/%PUBLIC_DIR%/$fastcgi_script_name;
		   fastcgi_intercept_errors off;
		   fastcgi_buffer_size 16k;
		   fastcgi_buffers 4 16k;
		   fastcgi_connect_timeout 300;
		   fastcgi_send_timeout 300;
		   fastcgi_read_timeout 300;
	}

	access_log off;
	error_log  %LOG_ROOT%/%DOMAIN%-error.log;
}
